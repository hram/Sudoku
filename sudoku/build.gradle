buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.github.triplet.play'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

def getProps(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName] != null ? props[propName] : "\"define config field: " + propName + "\""
    } else {
        return "\"define config file local.properties\"";
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.2"

    defaultConfig {
        applicationId "hram.sudoku"
        minSdkVersion 15
        targetSdkVersion 22
        versionName rootProject.versionName
        versionCode rootProject.versionCode
    }

    signingConfigs {
        debug {
            storeFile file('debug.jks')
        }

        release {
            storeFile file(getProps("KEYSTORE"))
            storePassword getProps("STOREPASS")
            keyAlias getProps("KEYALIAS")
            keyPassword getProps("KEYPASS")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:25.4.0'
    androidTestCompile "com.android.support:support-annotations:25.4.0"
    compile files('libs/gson.jar')
    compile('com.crashlytics.sdk.android:crashlytics:2.7.0@aar') {
        transitive = true;
    }
    compile 'com.rmtheis:tess-two:8.0.0'
}

play {
    track = 'alpha'
    serviceAccountEmail = getProps("SERVICE_ACCOUNT_EMAIL")
    pk12File = file(getProps("PK_12_FILE"))
}